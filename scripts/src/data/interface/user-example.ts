/**
 * @file This file contains the primary interface for user data within the application.
 */

/**
 * Represents a user profile with personal details, status, and authentication information.
 * This interface is a core data structure used throughout the application for managing
 * user-related states and API payloads.
 *
 * @remarks
 * The `User` interface is used for both a user's initial sign-up data and their full profile,
 * which may include additional fields populated by the system.
 */
export interface User {
  /**
   * The unique identifier for the user.
   *
   * @type {string}
   * @example "usr_a1b2c3d4e5f6g7h8"
   * @default A UUID generated by the authentication service.
   * @remarks This ID is used to uniquely identify the user across all services and is immutable.
   */
  id: string;

  /**
   * The user's full name, including first and last names.
   *
   * @type {string}
   * @example "Jane Doe"
   * @default The user's first and last names are required.
   * @remarks This field is displayed on the user's profile and in any public listings.
   */
  fullName: string;

  /**
   * The user's primary email address.
   *
   * @type {string}
   * @example "jane.doe@example.com"
   * @remarks This is the main point of contact and is used for account recovery. It must be unique.
   */
  email: string;

  /**
   * Indicates the current status of the user's account.
   *
   * @type {'active' | 'inactive' | 'suspended'}
   * @example "active"
   * @default "inactive"
   * @remarks Accounts are 'inactive' until the user verifies their email address.
   */
  status: "active" | "inactive" | "suspended";
}
